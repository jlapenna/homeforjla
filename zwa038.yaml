blueprint:
  name: ZWA038 Switch Scene Controller
  description: |
    Perform actions when Scenes are triggered.
    
    The release action is equivalent to a long tap.

    A release action is always triggered after a hold action, which makes
    them a bit tricky to use. The hold action is repeated as long as the
    button is held down.

  domain: automation
  input:
    zwavejs_device:
      name: ZWaveJS Device
      description: The Switch to listen for events on.
      selector:
        device:
          integration: zwave_js
          manufacturer: Aeotec Ltd.
          model: ZWA038
    tap_top_actions:
      name: Tap Top Actions
      selector:
        action:
      default: []
    tap_bottom_actions:
      name: Tap Bottom Actions
      selector:
        action:
      default: []
    tap_top_double_actions:
      name: Tap Top Double-tap Actions
      selector:
        action:
      default: []
    tap_bottom_double_actions:
      name: Tap Bottom Double-tap Actions
      selector:
        action:
      default: []

mode: single

# If you haven't upgraded to 2021.4.0 or newer yet, you'll need to use this trigger code instead
#trigger:
#  - platform: event
#    event_type: zwave_js_event
#    event_data:
#      type: value_notification

trigger:
  - platform: event
    event_type: zwave_js_value_notification

variables:
  logger: blueprint.zwavejs_scene_activation
  zwavejs_device: !input zwavejs_device

action:
  - choose:
    # IF triggered device_id is zwavejs_device id
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.device_id == zwavejs_device }}"
          - condition: template
            value_template: "{{ trigger.event.data.command_class_name == 'Central Scene' }}"
        sequence:
          - choose:
            # IF tap top
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.label == 'Scene 001' and trigger.event.data.value == 'KeyPressed' }}"
                sequence: !input tap_top_actions
            # IF tap top
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.label == 'Scene 002' and trigger.event.data.value == 'KeyPressed' }}"
                sequence: !input tap_bottom_actions
            # IF tap top double-tap
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.label == 'Scene 001' and trigger.event.data.value == 'KeyPressed2x' }}"
                sequence: !input tap_top_double_actions
            # IF tap bottom double-tap
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.label == 'Scene 002' and trigger.event.data.value == 'KeyPressed2x' }}"
                sequence: !input tap_bottom_double_actions
            # ELSE: unhandled scene label/value
            default:
              - service: system_log.write
                data:
                  level: debug
                  logger: "{{ logger }}"
                  message: "Activated scene '{{ trigger.event.data.label }}' with value '{{ trigger.event.data.value }}' for node '{{ zwavejs_device }}' ({{ trigger.event.data.node_id }})"
    # ELSE: unhandled zwavejs event
    default: []
